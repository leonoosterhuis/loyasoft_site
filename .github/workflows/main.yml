name: Build and Release with Semantic Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci --ignore-scripts


      - name: Install Semantic dependencies
        run: |
          npm -g --save-dev install @semantic-release/git semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/git @semantic-release/exec

      - name: Run Semantic Release -d
        run: |
          semantic-release -d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release version in project environment
        run: |
          RELEASE_VERSION=$(cat .VERSION)
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Update appVersion in Angular app
        run: |
          RELEASE_VERSION=$(cat .VERSION)
          echo "Replacing appVersion with $RELEASE_VERSION"
          sed -E "s/appVersion: '[0-9]+\.[0-9]+\.[0-9]+'/appVersion: '$RELEASE_VERSION'/" apps/LS-Site/src/environments/version.ts > tmp_environments.ts
          mv tmp_environments.ts apps/LS-Site/src/environments/version.ts

      - name: Install Angular CLI
        run: npm install -g --save-dev nx

      - name: Build for production
        run: nx run LS-Site:build:production

      - name: Prepare files for deployment logging
        run: |
          ls
          ls dist/apps/LS-Site
          ls dist/apps

      - name: Prepare files for deployment
        run: mv dist/apps/LS-Site/* public/

      - name: Commit and Push Changes
        run: |
          git config --global user.email "leon@oosterhuis.nu"
          git config --global user.name "LÃ©on Oosterhuis"
          git add -A
          git commit -m "Update appVersion to $RELEASE_VERSION"
          git push origin main

      - name: Run Semantic Release
        run: |
          semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
